package pe.gob.reniec.actacelebracion.controller;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import pe.gob.reniec.actacelebracion.bean.CelebracionBean;
import pe.gob.reniec.actacelebracion.bean.TestigoBean;
import pe.gob.reniec.actacelebracion.service.ActaCelebraService;


@Controller
public class ActaCelebraController {
	
	
private static final Logger log = Logger.getLogger(ActaCelebraController.class);
	
@Autowired
private ActaCelebraService actaCelebraService;	


@RequestMapping("/inicioSistema.htm")
    public ModelAndView mostrarInicioSis(HttpServletRequest req, HttpServletResponse res) throws Exception {
		log.info("Ingresa a metodo inicioSistema");
        ModelAndView mv = new ModelAndView("principal/areaPrincipal");
        return mv;
    }
	
	
	@RequestMapping(value = "/registrarTestigo.htm", method = RequestMethod.POST)
	public @ResponseBody String registrarTestigo(HttpServletRequest req, HttpServletResponse res) throws Exception {
		log.info("Ingresa a metodo registrarTestigo");
		
		String nuActaCelebra = req.getParameter("nuActaCelebra") == null ? "" : req.getParameter("nuActaCelebra");
		
		String tiDocumentoPT = req.getParameter("tiDocumentoPT") == null ? "" : req.getParameter("tiDocumentoPT");
		String nuDocumentoPT = req.getParameter("nuDocumentoPT") == null ? "" : req.getParameter("nuDocumentoPT");
		String primerApellidoPT = req.getParameter("primerApellidoPT") == null ? "" : req.getParameter("primerApellidoPT");
		String segundoApellidoPT = req.getParameter("segundoApellidoPT") == null ? "" : req.getParameter("segundoApellidoPT");
		String preNombresPT = req.getParameter("preNombresPT") == null ? "" : req.getParameter("preNombresPT");
		
		String tiDocumentoST = req.getParameter("tiDocumentoST") == null ? "" : req.getParameter("tiDocumentoST");
		String nuDocumentoST = req.getParameter("nuDocumentoST") == null ? "" : req.getParameter("nuDocumentoST");
		String primerApellidoST = req.getParameter("primerApellidoST") == null ? "" : req.getParameter("primerApellidoST");
		String segundoApellidoST = req.getParameter("segundoApellidoST") == null ? "" : req.getParameter("segundoApellidoST");
		String preNombresST = req.getParameter("preNombresST") == null ? "" : req.getParameter("preNombresST");
		
		TestigoBean testigoUno = new TestigoBean();
		testigoUno.setNuActaCelebracion(nuActaCelebra);
		testigoUno.setCoTipoDocIdentidad(tiDocumentoPT);
		testigoUno.setNuDocIdentidad(nuDocumentoPT);
		testigoUno.setDePrimerApellido(primerApellidoPT);
		testigoUno.setDeSegundoApellido(segundoApellidoPT);
		testigoUno.setDePreNombres(preNombresPT);
		
		int valTestigoUno = actaCelebraService.registrarTestigo(testigoUno);
					
		TestigoBean testigoDos = new TestigoBean();
		testigoDos.setNuActaCelebracion(nuActaCelebra);
		testigoDos.setCoTipoDocIdentidad(tiDocumentoST);
		testigoDos.setNuDocIdentidad(nuDocumentoST);
		testigoDos.setDePrimerApellido(primerApellidoST);
		testigoDos.setDeSegundoApellido(segundoApellidoST);
		testigoDos.setDePreNombres(preNombresST);
		
		int valTestigoDos = actaCelebraService.registrarTestigo(testigoDos);
		
		String respuesta = "00";
				
		if (valTestigoUno == 1 && valTestigoDos == 1){
			respuesta = "01"; //01: Los dos testigos registrados	
			
		}
		
		return respuesta;		
	}
	
	@RequestMapping(value = "/registrarCelebracion.htm", method = RequestMethod.POST)
	public @ResponseBody String registrarCelebracion(HttpServletRequest req, HttpServletResponse res) throws Exception {
		
		String nuActaCelebra = req.getParameter("nuActaCelebra") == null ? "" : req.getParameter("nuActaCelebra");
		
		String nuDocumentoAC = req.getParameter("nuDocumentoAC") == null ? "" : req.getParameter("nuDocumentoAC");
		String deCargoAC = req.getParameter("deCargoAC") == null ? "" : req.getParameter("deCargoAC");
		String primerApellidoAC = req.getParameter("primerApellidoAC") == null ? "" : req.getParameter("primerApellidoAC");
		String segundoApellidoAC = req.getParameter("segundoApellidoAC") == null ? "" : req.getParameter("segundoApellidoAC");
		String preNombresAC = req.getParameter("preNombresAC") == null ? "" : req.getParameter("preNombresAC");
		String feEvento = req.getParameter("feEvento") == null ? "" : req.getParameter("feEvento");
		String hoEvento = req.getParameter("hoEvento") == null ? "" : req.getParameter("hoEvento");
		String nuExpediente = req.getParameter("nuExpediente") == null ? "" : req.getParameter("nuExpediente");
		String deObservacion = req.getParameter("deObservacion") == null ? "" : req.getParameter("deObservacion");
		
		CelebracionBean celebracionBean = new CelebracionBean();
		celebracionBean.setNuActaCelebracion(nuActaCelebra);
		celebracionBean.setNuDocCelebrante(nuDocumentoAC);
		celebracionBean.setDeCargoCelebrante(deCargoAC);
		celebracionBean.setNoCelebrante(preNombresAC + " " + primerApellidoAC + " " + segundoApellidoAC);
		celebracionBean.setFeEvento(feEvento);
		celebracionBean.setHoEvento(hoEvento);
		celebracionBean.setDeExpediente(nuExpediente);
		celebracionBean.setDeObservacion(deObservacion);
		
		actaCelebraService.registrarCelebracion(celebracionBean);
		
		//TODO
		
		return null;
	}
}

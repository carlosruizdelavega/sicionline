/**
 * Funcion que no permite ingresar a un campo de texto caracteres no numericos.
 * @param objeto: referencia al objeto input[type=text], sobre el cual ha sido llamada la funcion
 * @returns {Boolean}
 */
function fnValidarNumero(objeto){
    var patron = /^\d*$/;
    if (!patron .test(objeto.value)) {
        objeto.value="";
        objeto.focus();
        return false;
    }
    return true;
}

function fnValidarTexto(objeto){
    var patron = /^[a-zA-ZÃ¡Ã©Ã­Ã³ÃºÃ�Ã‰Ã�Ã“ÃšÃ±Ã‘'\s]+$/;
    if (!patron .test(objeto.value)) {
        objeto.value="";
        objeto.focus();
        return false;
    }
    return true;
}

function fnEnMayusculas(objeto) {
	objeto.value = objeto.value.toUpperCase();
}


function fnPermite(elEvento, permitidos) {
	  // Variables que definen los caracteres permitidos
	  var numeros = "0123456789";
	  var caracteres = " abcdefghijklmnÃ±opqrstuvwxyzABCDEFGHIJKLMNÃ‘OPQRSTUVWXYZÃ¡Ã©Ã­Ã³ÃºÃ�Ã‰Ã�Ã“Ãš";
	  var caracteres_st = " abcdefghijklmnÃ±opqrstuvwxyzABCDEFGHIJKLMNÃ‘OPQRSTUVWXYZ";
	  var numeros_caracteres = numeros + caracteres;
	  var teclas_especiales = [8, 37, 39, 46];
	  // 8 = BackSpace, 46 = Supr, 37 = flecha izquierda, 39 = flecha derecha
	 
	 
	  // Seleccionar los caracteres a partir del parÃ¡metro de la funciÃ³n
	  switch(permitidos) {
	    case 'num':
	      permitidos = numeros;
	      break;
	    case 'car':
	      permitidos = caracteres;
	      break;
	    case 'num_car':
	      permitidos = numeros_caracteres;
	      break;
	    case 'car_st':
	      permitidos = caracteres_st;
		  break;
	  }
	 
	  // Obtener la tecla pulsada 
	  var evento = elEvento || window.event;
	  var codigoCaracter = evento.charCode || evento.keyCode;
	  var caracter = String.fromCharCode(codigoCaracter);
	 
	  // Comprobar si la tecla pulsada es alguna de las teclas especiales
	  // (teclas de borrado y flechas horizontales)
	  var tecla_especial = false;
	  for(var i in teclas_especiales) {
	    if(codigoCaracter == teclas_especiales[i]) {
	      tecla_especial = true;
	      break;
	    }
	  }
	 
	  // Comprobar si la tecla pulsada se encuentra en los caracteres permitidos
	  // o si es una tecla especial
	  return permitidos.indexOf(caracter) != -1 || tecla_especial;
	}

/**
 * funcion que limpia controles de un div especifico
 * @param idContenedor
 */
function fnLimpiarControles(idContenedor){
	
//	alert(idContenedor);	
	/* Se encarga de leer todas las etiquetas input del formulario*/   
	$('#'+idContenedor+'').find('input').each(function() {      
		switch(this.type) {         
			case 'password':
				case 'text':
				case 'hidden':
					$(this).val('');
					break;
				case 'checkbox':
				case 'radio':
					this.checked = false;
					}   
		});    
	/* Se encarga de leer todas las etiquetas select del formulario */  
	$('#'+idContenedor+'').find('select').each(function() {       
		$("#"+this.id + " option[value=00]").attr("selected",true);   
	});   
	/* Se encarga de leer todas las etiquetas textarea del formulario */   
	$('#'+idContenedor+'').find('textarea').each(function(){    
		$(this).val('');   
	});
	
}